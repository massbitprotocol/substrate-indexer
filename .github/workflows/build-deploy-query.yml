name: Build & deploy GraphQL Query
on:
  workflow_dispatch:
    inputs:
      isLatest:
        description: 'Add latest tag'
        default: 'true'
        required: true

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}
  GKE_ZONE:  ${{ secrets.GKE_ZONE }}
  DEPLOYMENT_NAME: substrate-query
  IMAGE: massbit/query

jobs:
  query-build-push-docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 100
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: massbit
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get updated version
        id: get-query-version
        run: |
          sh .github/workflows/scripts/queryVersion.sh

      - name: Build and push
        if: github.event.inputs.isLatest == 'false'
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/query/Dockerfile
          tags: massbit/manger:v${{ steps.get-query-version.outputs.QUERY_VERSION }}
          build-args: RELEASE_VERSION=${{ steps.get-query-version.outputs.QUERY_VERSION }}

      - name: Build and push
        if: github.event.inputs.isLatest == 'true'
        uses: docker/build-push-action@v2
        with:
          push: true
          platforms: arm64,amd64
          file: ./packages/query/Dockerfile
          tags: massbit/query:v${{ steps.get-query-version.outputs.QUERY_VERSION }},massbit/query:latest
          build-args: RELEASE_VERSION=${{ steps.get-query-version.outputs.QUERY_VERSION }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ secrets.GKE_PROJECT }}

      - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}
          credentials: ${{ secrets.GKE_SA_KEY }}

      - name: Set up Kustomize
        run: |-
          cd deployment/k8s
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
          chmod u+x ./kustomize

      - name: Deploy
        run: |-
          cd deployment/k8s
          ./kustomize edit set image QUERY_IMAGE:QUERY_TAG=$IMAGE:v${{ steps.get-query-version.outputs.QUERY_VERSION }}
          ./kustomize build . | kubectl apply -f -
          kubectl rollout status deployment/$DEPLOYMENT_NAME
          kubectl get services -o wide

